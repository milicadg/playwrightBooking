name: Deploy playwright report
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allows to run this workflow manually from the Actions tab 
  workflow_dispatch:
# Sets permissions of the GITHUB_TOKEN to allow deplooyment to GitHub pages
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  install:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    name: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --force
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
  test:
    name: ðŸ§ª Test (${{ matrix.shard }}/${{ matrix.shardTotal }})
    needs: install
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2]
        shardTotal: [2]
        project: [ExecuteInChrome, ExecuteInFF]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shard }}/${{ matrix.shardTotal }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}-${{ matrix.shard }}_${{ matrix.shardTotal }}
          path: './test-results'
          retention-days: 30

      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v1
        with: 
        # Upload entire repository
          path: './test-results'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
  report:
    name: Merge and Publish Reports
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 30
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Download Artifacts
        id: download-artifacts
        uses: actions/download-artifact@v3
      - name: Merge Playwright Monocart Reports
        id: merge-playwright-monocart-reports
        run: |
          curl -o previous-trend.json https://milicadg.github.io/playwrightBooking/test-results/index.json
          npm run merge:report:monocart
          chmod +x ./merge-test-reports.sh
          ./merge-test-reports.sh
      - name: Move to Reports folder
        id: move-to-reports-folder
        run: |
          mv merged-monocart-report test-results
        shell: bash
      - name: Setup Pages
        id: setup-pages
        uses: actions/configure-pages@v3
      - name: Upload Pages Artifact
        id: upload-pages-artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: test-results/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Delete Unnecessary Artifacts
        id: delete-unnecessary-artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            test-results-*
          failOnError: false

  